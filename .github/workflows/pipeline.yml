name: Nuget Publish
on:
  push:
    branches:
      - master
jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
  build:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        dotnet-version: [ '5.0.x' ]
    steps:
      - name: Build
        run: dotnet build --configuration Release --no-restore
  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '5.0.x' ]
    steps:
      - name: Test
        run: dotnet test --no-restore --verbosity normal
  publish:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '5.0.x' ]
    steps:
      - name: Publish FluentEmail.Core
        uses: brandedoutcast/publish-nuget@v2.5.2
        with:
          PACKAGE_NAME: VoronoiLib
          PROJECT_FILE_PATH: VoronoiLib/VoronoiLib.csproj
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}